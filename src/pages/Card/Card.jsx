import React, { useContext, useState, useEffect } from 'react';
import './Card.css';
import { StoreContext } from '../../components/context/StoreContext';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import axios from 'axios';

const Card = () => {
  const {
    cartItems,
    food_list,
    removeFromCart,
    getTotalAmount,
    url,
    setCartItems,
  } = useContext(StoreContext);

  const [tableNumber, setTableNumber] = useState('');
  const [phoneNumber, setPhoneNumber] = useState('');
  const [orderId, setOrderId] = useState('');

  const handleProceedToOrder = async () => {
    if (tableNumber && phoneNumber && getTotalAmount() > 0) {
      // Phone number validation: simple number length check
      if (phoneNumber.length !== 8) {
        toast.error('Please enter a valid 8-digit phone number.');
        return;
      }

      try {
        const items = food_list
          .filter(item => cartItems[item._id] > 0)
          .map(item => ({
            _id: item._id,
            name: item.name,
            price: item.price,
            quantity: cartItems[item._id]
          }));

        const res = await axios.post(`${url}/api/cart/place`, {
          userId: new Date().toISOString(),  // You can use server-generated ID if required
          items,
          tableNo: parseInt(tableNumber),
          phoneNo: parseInt(phoneNumber),
          amount: getTotalAmount()
        });

        if (res.data.success) {
          setOrderId(res.data.orderId); // Order ID generated by the backend
          toast.success(`Order placed! Your Order ID is ${res.data.orderId}`);
          setCartItems({}); // Clear cart after successful order
        } else {
          toast.error('Something went wrong while placing your order.');
        }
      } catch (error) {
        console.error("Failed to send cart data:", error);
        toast.error('Failed to place your order. Please try again.');
      }
    } else {
      toast.error('Please fill all fields and ensure your cart is not empty.');
    }
  };

  useEffect(() => {
    if (orderId) {
      // Optionally fetch order details after placing the order
      console.log('Order placed with ID:', orderId);
    }
  }, [orderId]);

  return (
    <div className='cart'>
      <ToastContainer />
      <div className="cart-items">
        <div className="cart-items-titles">
          <p>Items</p>
          <p>Title</p>
          <p>Price</p>
          <p>Quantity</p>
          <p>Total</p>
          <p>Remove</p>
        </div>
        <br />
        <hr />
        {food_list.map((item) => {
          if (cartItems[item._id] > 0) {
            return (
              <div key={item._id}>
                <div className="cart-items-titles cart-items-item">
                  <img src={`${url}/images/${item.image}`} alt={item.name} />
                  <p>{item.name}</p>
                  <p>Nu.{item.price}</p>
                  <p>{cartItems[item._id]}</p>
                  <p>Nu.{item.price * cartItems[item._id]}</p>
                  <p onClick={() => removeFromCart(item._id)} className='cross'>x</p>
                </div>
                <hr />
              </div>
            );
          }
          return null;
        })}
      </div>

      <div className="cart-bottom">
        <div className="cart-total">
          <h2>Your Orders</h2>
          <div>
            <div className="user-details">
              <div className="details">
                <p>Table Number</p>
                <input
                  type="number"
                  className="input-number"
                  placeholder='Table No'
                  value={tableNumber}
                  onChange={(e) => setTableNumber(e.target.value)}
                  required
                />
              </div>
              <div className="details">
                <p>Phone Number</p>
                <input
                  type="number"
                  className="input-number"
                  placeholder='Phone No'
                  value={phoneNumber}
                  onChange={(e) => setPhoneNumber(e.target.value)}
                  required
                />
              </div>
            </div>
            <hr />
            <div className="cart-total-details">
              <b>Total : </b>
              <b> Nu.{getTotalAmount()} /-</b>
            </div>
          </div>
          <button
            type='submit'
            className='proceed-to-order'
            onClick={handleProceedToOrder}
          >
            Proceed To Order
          </button>
        </div>
      </div>
    </div>
  );
};

export default Card;
